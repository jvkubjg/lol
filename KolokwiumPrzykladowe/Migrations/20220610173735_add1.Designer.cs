// <auto-generated />
using System;
using KolokwiumPrzykladowe.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KolokwiumPrzykladowe.Migrations
{
    [DbContext(typeof(MusicContext))]
    [Migration("20220610173735_add1")]
    partial class add1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("idMusicLabel")
                        .HasColumnType("int");

                    b.HasKey("IdAlbum")
                        .HasName("Album_pk");

                    b.HasIndex("idMusicLabel");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            IdAlbum = 1,
                            AlbumName = "Ad",
                            PublishDate = new DateTime(1999, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            idMusicLabel = 1
                        });
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.MusicLabel", b =>
                {
                    b.Property<int>("IdMusicLabel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMusicLabel")
                        .HasName("MusicLabel_pk");

                    b.ToTable("MusicLabels");

                    b.HasData(
                        new
                        {
                            IdMusicLabel = 1,
                            Name = "asd"
                        });
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.Musican_Track", b =>
                {
                    b.Property<int>("IdTrack")
                        .HasColumnType("int");

                    b.Property<int>("IdMusician")
                        .HasColumnType("int");

                    b.HasKey("IdTrack", "IdMusician")
                        .HasName("MusicianTrack_pk");

                    b.HasIndex("IdMusician");

                    b.ToTable("Musican_Tracks");

                    b.HasData(
                        new
                        {
                            IdTrack = 1,
                            IdMusician = 1
                        });
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.Musician", b =>
                {
                    b.Property<int>("IdMusician")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nickanme")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdMusician")
                        .HasName("Musician_pk");

                    b.ToTable("Musician");

                    b.HasData(
                        new
                        {
                            IdMusician = 1,
                            FirstName = "asd",
                            LastName = "Asd",
                            Nickanme = "asdf"
                        });
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.Track", b =>
                {
                    b.Property<int>("IdTrack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<int>("IdMusicAlbum")
                        .HasColumnType("int");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTrack")
                        .HasName("Track_pk");

                    b.HasIndex("IdMusicAlbum");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            IdTrack = 1,
                            Duration = 1f,
                            IdMusicAlbum = 1,
                            TrackName = "Asd"
                        },
                        new
                        {
                            IdTrack = 2,
                            Duration = 1.5f,
                            IdMusicAlbum = 1,
                            TrackName = "Asd"
                        });
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.Album", b =>
                {
                    b.HasOne("KolokwiumPrzykladowe.Entities.MusicLabel", "IdMusicLabelNavigation")
                        .WithMany("Albums")
                        .HasForeignKey("idMusicLabel")
                        .HasConstraintName("music_label_pk")
                        .IsRequired();

                    b.Navigation("IdMusicLabelNavigation");
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.Musican_Track", b =>
                {
                    b.HasOne("KolokwiumPrzykladowe.Entities.Musician", "IdMusiciankNavigation")
                        .WithMany("musician_tracks")
                        .HasForeignKey("IdMusician")
                        .HasConstraintName("MusicianTrack_musican")
                        .IsRequired();

                    b.HasOne("KolokwiumPrzykladowe.Entities.Track", "IdTrackNavigation")
                        .WithMany("musician_tracks")
                        .HasForeignKey("IdTrack")
                        .HasConstraintName("MusicianTrack_track")
                        .IsRequired();

                    b.Navigation("IdMusiciankNavigation");

                    b.Navigation("IdTrackNavigation");
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.Track", b =>
                {
                    b.HasOne("KolokwiumPrzykladowe.Entities.Album", "IdAlbumNavigation")
                        .WithMany("Tracks")
                        .HasForeignKey("IdMusicAlbum")
                        .HasConstraintName("track_music")
                        .IsRequired();

                    b.Navigation("IdAlbumNavigation");
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.Album", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.MusicLabel", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.Musician", b =>
                {
                    b.Navigation("musician_tracks");
                });

            modelBuilder.Entity("KolokwiumPrzykladowe.Entities.Track", b =>
                {
                    b.Navigation("musician_tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
